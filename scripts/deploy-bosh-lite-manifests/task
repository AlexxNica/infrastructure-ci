#!/bin/bash -exu

function main() {
  setup_env
  deploy_boshlite
  upload_stemcell
  upload_dependencies
  create_and_upload_release
  update_cloud_config
  deploy_manifests
}

function setup_env() {
  set +x
  export BOSH_USER="admin"
  export BOSH_PASSWORD="admin"

  export BOSH_LITE_PRIVATE_KEY="${PWD}/bosh-lite.pem"
  echo "${BOSH_LITE_PRIVATE_KEY_CONTENTS}" > "${BOSH_LITE_PRIVATE_KEY}"
  set -x
}

function deploy_boshlite() {
  pushd "${PWD}/bosh-lite" > /dev/null
    vagrant up --provider=aws
    export BOSH_DIRECTOR="$(vagrant ssh-config 2>/dev/null | grep HostName | awk '{print $2}')"

    target_director
  popd > /dev/null
}

function target_director() {
  set +e
  local rc
  rc=1

  while [ "${rc}" -ne "0" ]; do
    sleep 10
    curl -k -s "https://${BOSH_DIRECTOR}:25555/info" > /dev/null
    rc=$?
  done
  set -e

  /opt/rubies/ruby-2.2.4/bin/bosh target "${BOSH_DIRECTOR}"
}

function upload_stemcell() {
  /opt/rubies/ruby-2.2.4/bin/bosh upload stemcell "${PWD}/bosh-lite-stemcell/stemcell.tgz"
}

function upload_dependencies() {
  for dependency in ${DEPENDENCIES}; do
    /opt/rubies/ruby-2.2.4/bin/bosh -n upload release "https://bosh.io/d/github.com/${dependency}"
  done
}

function create_and_upload_release() {
  pushd "${PWD}/release" > /dev/null
    /opt/rubies/ruby-2.2.4/bin/bosh -n create release --force
    /opt/rubies/ruby-2.2.4/bin/bosh -n upload release
  popd > /dev/null
}

function update_cloud_config() {
  set +e
  bosh update cloud-config "${PWD}/release/${CLOUD_CONFIG}"
  set -e
}

function deploy_manifests() {
  pushd "${PWD}/release" > /dev/null
    for manifest in ${MANIFESTS}; do
      sed -i -e "s/BOSH-DIRECTOR-UUID/$(/opt/rubies/ruby-2.2.4/bin/bosh status --uuid)/g" "${manifest}"
      /opt/rubies/ruby-2.2.4/bin/bosh -d "${manifest}" -n deploy
      /opt/rubies/ruby-2.2.4/bin/bosh -n delete deployment "$(/opt/rubies/ruby-2.2.4/bin/bosh deployments | grep bosh-warden-boshlite | awk '{print $2}')"
    done
  popd > /dev/null
}

function destroy_boshlite() {
  pushd "${PWD}/bosh-lite" > /dev/null
    vagrant destroy -f
  popd > /dev/null
}

trap destroy_boshlite EXIT

main "${PWD}"
