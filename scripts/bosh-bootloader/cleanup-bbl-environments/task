#!/bin/bash -exu

ROOT="${PWD}"
BBL_STATES_DIR="${ROOT}/failed-bbl-states"

function install_bbl_develop() {
  mkdir -p "${GOPATH}/src/github.com/cloudfoundry"

  pushd "${GOPATH}/src/github.com/cloudfoundry" > /dev/null
    ln -s "${ROOT}/bosh-bootloader"
    go install github.com/cloudfoundry/bosh-bootloader/bbl
  popd > /dev/null
}

function download_failed_bbl_states() {
  mkdir -p "${BBL_STATES_DIR}"
  aws s3 cp --recursive s3://bbl-integration-tests/ ${BBL_STATES_DIR}
}

function delete_failed_bbl_states() {
  pushd "${BBL_STATES_DIR}" > /dev/null
    for bbl_state_tar in $(ls);
    do
      delete_bbl_env ${bbl_state_tar}
    done
  popd > /dev/null
}

function delete_bbl_env() {
  local bbl_state_tar
  bbl_state_tar="${1}"

  tar -xvf "${1}"

  pushd $(basename ${1} .tgz) > /dev/null
    if [ -f "bbl-state.json" ]; then
      set +x
      eval "$(bbl print-env)"
      set -x

      set +e
      if [ -n "${BOSH_ENVIRONMENT}" ]; then
        curl -k --max-time 5 "${BOSH_ENVIRONMENT}/info"
        if [ $? -eq 0 ]; then
          delete_bbl_deployments
          bbl destroy -n
        fi
      else
        echo "No director address found."
      fi
      set -e
    fi
  popd > /dev/null

  aws s3 rm s3://bbl-integration-tests/${1}
}

function delete_bbl_deployments() {
  local deployments
  deployments=$(bosh deployments --json | jq -r '.Tables[0].Rows[][0]')

  if [ $? -eq 0 ]; then
    for deployment in ${deployments}; do
      bosh -d ${deployment} delete-deployment -n
    done
  fi
}

function main() {
  install_bbl_develop
  download_failed_bbl_states
  delete_failed_bbl_states
}

main
