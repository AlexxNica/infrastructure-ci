#!/bin/bash -exu

function main() {
  local root_dir
  root_dir=${1}

  setup_bosh_env_vars "${root_dir}"

  upload_stemcell "${root_dir}/windows-stemcell"
  upload_release "${root_dir}/concourse-windows"
  generate_vars_file "${root_dir}"

  bosh -d ${DEPLOYMENT_NAME} -n deploy \
    "${root_dir}/ci/scripts/infrastructure-ci/deploy-concourse-windows-worker/fixtures/windows-worker.yml" \
    --vars-file "${root_dir}/vars.yml"
    --var-file tsa_worker_private_key="${root_dir}/tsa_worker.key"

  bosh -n clean-up
}

function setup_bosh_env_vars() {
  local root_dir
  root_dir=${1}

  set +x
  pushd "${root_dir}/bbl-states-repo/${BBL_STATE_DIR}" > /dev/null
    export BOSH_ENVIRONMENT=$(bbl director-address)
    export BOSH_CA_CERT="$(bbl director-ca-cert)"
    export BOSH_CLIENT=$(bbl director-username)
    export BOSH_CLIENT_SECRET=$(bbl director-password)
  popd > /dev/null
  set -x
}

function upload_stemcell() {
  local stemcell_dir
  stemcell_dir=${1}
  pushd "${stemcell_dir}" > /dev/null
    bosh upload-stemcell light-bosh-stemcell-*-google-kvm-windows2012R2-go_agent.tgz
  popd > /dev/null
}

function upload_release() {
  local release_dir
  release_dir=${1}
  pushd "${release_dir}" > /dev/null
    bosh create-release --force
    bosh upload-release
  popd > /dev/null
}

function generate_vars_file() {
  local root_dir
  root_dir=${1}

  set +x
  cat > "${root_dir}/vars.yml" <<EOF
name: ${DEPLOYMENT_NAME}
concourse_team: ${CONCOURSE_TEAM}
tsa_host: ${TSA_HOST}
tsa_public_key: ${TSA_PUBLIC_KEY}
EOF

  echo "${TSA_WORKER_PRIVATE_KEY}" > "${root_dir}/tsa_worker.key"
  set -x
}

main ${PWD}
