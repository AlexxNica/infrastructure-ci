#!/bin/bash -exu

ROOT=${PWD}

function main() {
  setup_env
  deploy_boshlite
  upload_stemcell
  upload_dependencies
  create_and_upload_release
  update_cloud_config
  deploy_manifests
}

function setup_env() {
  set +x
  export BOSH_CLIENT="admin"
  export BOSH_CLIENT_SECRET="admin"
  export BOSH_CA_CERT="$(cat ${ROOT}/bosh-lite/ca/certs/ca.crt)"

  export BOSH_LITE_PRIVATE_KEY="${ROOT}/bosh-lite.pem"
  echo "${BOSH_LITE_PRIVATE_KEY_CONTENTS}" > "${BOSH_LITE_PRIVATE_KEY}"
  set -x
}

function deploy_boshlite() {
  pushd "${ROOT}/bosh-lite" > /dev/null
    vagrant up --provider=aws
    export BOSH_ENVIRONMENT="$(vagrant ssh-config 2>/dev/null | grep HostName | awk '{print $2}')"

    target_director
  popd > /dev/null
}

function target_director() {
  set +e
  local rc
  rc=1

  while [ "${rc}" -ne "0" ]; do
    sleep 10
    curl -k -s "https://${BOSH_ENVIRONMENT}:25555/info" > /dev/null
    rc=$?
  done
  set -e
}

function upload_stemcell() {
  bosh upload-stemcell "${ROOT}/bosh-lite-stemcell/stemcell.tgz"
}

function upload_dependencies() {
  for dependency in ${DEPENDENCIES}; do
    bosh -n upload-release "https://bosh.io/d/github.com/${dependency}"
  done
}

function create_and_upload_release() {
  pushd "${ROOT}/release" > /dev/null
    bosh -n create-release --force
    bosh -n upload-release
  popd > /dev/null
}

function update_cloud_config() {
  set +e
  bosh update-cloud-config "${ROOT}/release/${CLOUD_CONFIG}"
  set -e
}

function deploy_manifests() {
  pushd "${ROOT}/release" > /dev/null
    for manifest in ${MANIFESTS}; do
      local name
      name="$(bosh int ${manifest} --path /name)"
      bosh -d "${name}" -n deploy "${manifest}"
      bosh -d "${name}" -n delete-deployment
    done
  popd > /dev/null
}

function destroy_boshlite() {
  pushd "${ROOT}/bosh-lite" > /dev/null
    vagrant destroy -f
  popd > /dev/null
}

trap destroy_boshlite EXIT

main "${ROOT}"
