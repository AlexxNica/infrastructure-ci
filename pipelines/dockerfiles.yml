---
groups:
- name: dockerfiles
  jobs:
  - minimal-docker-image
  - golang-docker-image
  - deployment-docker-image
  - vagrant-docker-image

resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
    tag: latest

resources:
- name: deployment-dockerfile
  type: git
  source:
    uri: https://github.com/cloudfoundry/infrastructure-ci
    branch: master
    paths:
    - dockerfiles/deployment

- name: golang-dockerfile
  type: git
  source:
    uri: https://github.com/cloudfoundry/infrastructure-ci
    branch: master
    paths:
    - dockerfiles/golang

- name: vagrant-dockerfile
  type: git
  source:
    uri: https://github.com/cloudfoundry/infrastructure-ci
    branch: master
    paths:
    - dockerfiles/vagrant

- name: minimal-dockerfile
  type: git
  source:
    uri: https://github.com/cloudfoundry/infrastructure-ci
    branch: master
    paths:
    - dockerfiles/minimal

- name: ubuntu-docker-image
  type: docker-image
  source:
    repository: ubuntu
    tag: "14.04"

- name: minimal-docker-image
  type: docker-image
  source:
    repository: cfinfrastructure/minimal
    username: {{docker-username}}
    password: {{docker-password}}
    email: {{docker-email}}

- name: golang-docker-image
  type: docker-image
  source:
    repository: cfinfrastructure/golang
    username: {{docker-username}}
    password: {{docker-password}}
    email: {{docker-email}}

- name: deployment-docker-image
  type: docker-image
  source:
    repository: cfinfrastructure/deployment
    username: {{docker-username}}
    password: {{docker-password}}
    email: {{docker-email}}

- name: vagrant-docker-image
  type: docker-image
  source:
    repository: cfinfrastructure/vagrant
    username: {{docker-username}}
    password: {{docker-password}}
    email: {{docker-email}}

- name: slack-alert
  type: slack-notification
  source:
    url: https://hooks.slack.com/services/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

jobs:
- name: minimal-docker-image
  public: true
  plan:
  - do:
    - aggregate:
      - get: ubuntu-docker-image
        trigger: true
        params:
          skip_download: true
      - get: infrastructure-ci
        resource: minimal-dockerfile
        trigger: true
    - put: minimal-docker-image
      params:
        build: infrastructure-ci/dockerfiles/minimal
        cache: false
      on_failure:
        put: slack-alert
        params:
          text: |
            [$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME] failed:

            https://p-concourse.wings.cf-app.com/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME

- name: golang-docker-image
  public: true
  plan:
  - do:
    - aggregate:
      - get: minimal-docker-image
        passed: [minimal-docker-image]
        trigger: true
        params:
          skip_download: true
      - get: infrastructure-ci
        resource: golang-dockerfile
        trigger: true
    - put: golang-docker-image
      params:
        build: infrastructure-ci/dockerfiles/golang
        cache: false
      on_failure:
        put: slack-alert
        params:
          text: |
            [$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME] failed:

            https://p-concourse.wings.cf-app.com/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME

- name: deployment-docker-image
  public: true
  plan:
  - do:
    - aggregate:
      - get: golang-docker-image
        passed: [golang-docker-image]
        trigger: true
        params:
          skip_download: true
      - get: infrastructure-ci
        resource: deployment-dockerfile
        trigger: true
    - put: deployment-docker-image
      params:
        build: infrastructure-ci/dockerfiles/deployment
        cache: false
      on_failure:
        put: slack-alert
        params:
          text: |
            [$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME] failed:

            https://p-concourse.wings.cf-app.com/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME

- name: vagrant-docker-image
  public: true
  plan:
  - do:
    - aggregate:
      - get: deployment-docker-image
        passed: [deployment-docker-image]
        trigger: true
        params:
          skip_download: true
      - get: infrastructure-ci
        resource: vagrant-dockerfile
        trigger: true
    - put: vagrant-docker-image
      params:
        build: infrastructure-ci/dockerfiles/vagrant
        cache: false
      on_failure:
        put: slack-alert
        params:
          text: |
            [$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME] failed:

            https://p-concourse.wings.cf-app.com/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
