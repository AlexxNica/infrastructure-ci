groups:
- name: bosh-bootloader
  jobs:
  - test-bosh-bootloader
  - aws-integration-tests
  - gcp-integration-tests
  - concourse-integration-tests
- name: cf-deployment
  jobs:
  - bbl-downstream-docker-image
  - bbl-downstream-setup-env
  - bbl-downstream-destroy-env
  - setup-aws-terraform-infrastructure
  - aws-terraform-cf-deploy
  - aws-terraform-cf-delete
  - teardown-aws-terraform-infrastructure
- name: smoke-tests
  jobs:
  - test-with-latest-terraform
  - test-with-latest-bosh-cli
- name: final-release
  jobs:
  - major
  - minor
  - patch
  - github-release
- name: cleanup
  jobs:
  - cleanup-bbl-environments

resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
    tag: latest

resources:
- name: bosh-bootloader-develop
  type: git
  source:
    branch: develop
    uri: https://github.com/cloudfoundry/bosh-bootloader.git
- name: bosh-bootloader-master
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/bosh-bootloader.git
- name: infrastructure-ci
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/infrastructure-ci.git
- name: infrastructure-ci-bbl-states
  type: git
  source:
    branch: master
    uri: git@github.com:cloudfoundry/infrastructure-ci-bbl-states.git
    private_key: {{cf_infra_bot_user_github_private_key}}
- name: bbl-integration-s3
  type: s3
  source:
    bucket: bbl-integration-tests
    regexp: (.*).tgz
    access_key_id: {{bbl_integration_tests_s3_access_key_id}}
    secret_access_key: {{bbl_integration_tests_s3_secret_access_key}}
- name: version
  type: semver
  source:
    initial_version: 0.0.1
    driver: s3
    bucket: bbl-version
    key: bbl-version
    access_key_id: {{bbl_version_s3_access_key_id}}
    secret_access_key: {{bbl_version_s3_secret_access_key}}
- name: bbl-release
  type: github-release
  source:
    user: cloudfoundry
    repository: bosh-bootloader
    access_token: {{cf_infra_bot_user_github_access_token}}
    drafts: true
- name: terraform
  type: github-release
  source:
    user: hashicorp
    repository: terraform
- name: bosh-cli
  type: s3
  source:
    bucket: bosh-cli-artifacts
    regexp: bosh-cli-(.*)-linux-amd64
- name: slack-alert
  type: slack-notification
  source:
    url: https://hooks.slack.com/services/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
- name: empty-ops-files
  type: time
  source: {interval: 5m}
- name: cf-deployment
  type: git
  source:
    branch: develop
    uri: https://github.com/cloudfoundry/cf-deployment.git

# CF Deployment Concourse Tasks Resource
- name: cf-deployment-concourse-tasks
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks.git
    tag_filter: v1.*

- name: cf-deployment-concourse-tasks-docker-image
  type: docker-image
  source:
    repository: relintdockerhubpushbot/cf-deployment-concourse-tasks

- name: cf-deployment-concourse-tasks-bbl-dev-docker-image
  type: docker-image
  source:
    repository: cfinfrastructure/cf-deployment-concourse-tasks-bbl-dev
    username: {{docker-username}}
    password: {{docker-password}}
    email: {{docker-email}}

- name: cf-deployment-concourse-tasks-bbl-dev-dockerfile
  type: git
  source:
    uri: https://github.com/cloudfoundry/infrastructure-ci
    branch: master
    paths:
    - dockerfiles/cf-deployment-concourse-tasks-bbl-dev

jobs:

# Main Pipeline
- name: test-bosh-bootloader
  public: true
  plan:
  - aggregate:
    - get: ci
      resource: infrastructure-ci
    - get: bosh-bootloader
      resource: bosh-bootloader-develop
      trigger: true
  - task: test
    file: ci/scripts/bosh-bootloader/test-bosh-bootloader/task.yml
    on_failure:
      put: slack-alert
      params:
        text: |
          [$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME] failed:

          https://p-concourse.wings.cf-app.com/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME

- name: aws-integration-tests
  serial: true
  public: true
  plan:
  - aggregate:
    - get: bosh-bootloader
      resource: bosh-bootloader-develop
      passed: [test-bosh-bootloader]
      trigger: true
    - get: ci
      resource: infrastructure-ci
  - task: test
    file: ci/scripts/bosh-bootloader/aws-integration/task.yml
    params:
      AWS_ACCESS_KEY_ID: {{aws_access_key_id}}
      AWS_SECRET_ACCESS_KEY: {{aws_secret_access_key}}
      AWS_REGION: {{aws_region}}
      BBL_TEST_ENV_ID_PREFIX: bbl-ci
    on_failure:
      do:
      - put: bbl-integration-s3
        params:
          file: bbl-integration-s3/*.tgz
      - put: slack-alert
        params:
          text: |
            [$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME] failed:

            https://p-concourse.wings.cf-app.com/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME

- name: gcp-integration-tests
  serial: true
  public: true
  plan:
  - aggregate:
    - get: bosh-bootloader
      resource: bosh-bootloader-develop
      passed: [test-bosh-bootloader]
      trigger: true
    - get: ci
      resource: infrastructure-ci
  - task: test
    file: ci/scripts/bosh-bootloader/gcp-integration/task.yml
    params:
      GCP_SERVICE_ACCOUNT_KEY: {{gcp_service_account_key}}
      GCP_PROJECT_ID: {{gcp_project_id}}
      GCP_REGION: {{gcp_region}}
      GCP_ZONE: {{gcp_zone}}
      BBL_TEST_ENV_ID_PREFIX: bbl-ci
    on_failure:
      do:
      - put: bbl-integration-s3
        params:
          file: bbl-integration-s3/*.tgz
      - put: slack-alert
        params:
          text: |
            [$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME] failed:

            https://p-concourse.wings.cf-app.com/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME

- name: concourse-integration-tests
  serial: true
  public: true
  plan:
  - aggregate:
    - get: ci
      resource: infrastructure-ci
    - get: bosh-bootloader
      resource: bosh-bootloader-develop
      passed: [aws-integration-tests, gcp-integration-tests]
      trigger: true
  - task: test
    file: ci/scripts/bosh-bootloader/concourse-integration/task.yml
    params:
      AWS_ACCESS_KEY_ID: {{aws_access_key_id}}
      AWS_SECRET_ACCESS_KEY: {{aws_secret_access_key}}
      AWS_REGION: {{aws_region}}
      GCP_SERVICE_ACCOUNT_KEY: {{gcp_service_account_key}}
      GCP_PROJECT_ID: {{gcp_project_id}}
      GCP_REGION: {{gcp_region}}
      GCP_ZONE: {{gcp_zone}}
      BBL_TEST_ENV_ID_PREFIX: bbl-ci
    on_failure:
      do:
      - put: bbl-integration-s3
        params:
          file: bbl-integration-s3/*.tgz
      - put: slack-alert
        params:
          text: |
            [$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME] failed:

            https://p-concourse.wings.cf-app.com/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME

# Smoke-tests
- name: test-with-latest-terraform
  serial: true
  public: true
  plan:
  - aggregate:
    - get: bosh-bootloader
      resource: bosh-bootloader-develop
      passed: [test-bosh-bootloader]
    - get: ci
      resource: infrastructure-ci
    - get: terraform
      trigger: true
  - task: test
    file: ci/scripts/bosh-bootloader/test-with-latest-terraform/task.yml
    params:
      GCP_SERVICE_ACCOUNT_KEY: {{gcp_service_account_key}}
      GCP_PROJECT_ID: {{gcp_project_id}}
      GCP_REGION: {{gcp_region}}
      GCP_ZONE: {{gcp_zone}}
      BBL_TEST_ENV_ID_PREFIX: bbl-ci-terraform
    on_failure:
      do:
      - put: bbl-integration-s3
        params:
          file: bbl-integration-s3/*.tgz
      - put: slack-alert
        params:
          text: |
            [$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME] failed:

            https://p-concourse.wings.cf-app.com/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME

- name: test-with-latest-bosh-cli
  serial: true
  public: true
  plan:
  - aggregate:
    - get: bosh-bootloader
      resource: bosh-bootloader-develop
      passed: [test-bosh-bootloader]
    - get: ci
      resource: infrastructure-ci
    - get: bosh-cli
      trigger: true
  - task: test
    file: ci/scripts/bosh-bootloader/test-with-latest-bosh-cli/task.yml
    params:
      GCP_SERVICE_ACCOUNT_KEY: {{gcp_service_account_key}}
      GCP_PROJECT_ID: {{gcp_project_id}}
      GCP_REGION: {{gcp_region}}
      GCP_ZONE: {{gcp_zone}}
      BBL_TEST_ENV_ID_PREFIX: bbl-ci-bosh-cli
    on_failure:
      do:
      - put: bbl-integration-s3
        params:
          file: bbl-integration-s3/*.tgz
      - put: slack-alert
        params:
          text: |
            [$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME] failed:

            https://p-concourse.wings.cf-app.com/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME

# CF Deployment Pipeline
- name: setup-aws-terraform-infrastructure
  public: true
  plan:
  - aggregate:
    - get: bosh-bootloader
      resource: bosh-bootloader-develop
      passed: [test-bosh-bootloader]
      trigger: true
    - get: ci
      resource: infrastructure-ci
    - get: bbl-states-repo
      resource: infrastructure-ci-bbl-states
  - task: bbl-up
    file: ci/scripts/common/bbl-up-aws-terraform/task.yml
    params:
      BBL_AWS_SECRET_ACCESS_KEY: {{aws_secret_access_key}}
      BBL_AWS_ACCESS_KEY_ID: {{aws_access_key_id}}
      BBL_AWS_REGION: {{aws_region}}
      BBL_STATE_DIR: bbl-aws-terraform
      BBL_NAME: bbl-aws-terraform
      BBL_LB_DOMAIN: bbl-aws-terraform.infrastructure.cf-app.com
      BBL_LB_CERT: {{bbl_aws_terraform_cf_lb_cert}}
      BBL_LB_KEY: {{bbl_aws_terraform_cf_lb_key}}
    on_failure:
      put: slack-alert
      params:
        text: |
          [$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME] failed:

          https://p-concourse.wings.cf-app.com/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
    ensure:
      put: infrastructure-ci-bbl-states
      params:
        repository: bbl-states-repo-out
        rebase: true

- name: aws-terraform-cf-deploy
  public: true
  plan:
  - aggregate:
    - get: bosh-bootloader
      resource: bosh-bootloader-develop
      passed: [setup-aws-terraform-infrastructure]
    - get: ci
      resource: infrastructure-ci
    - get: bbl-state
      resource: infrastructure-ci-bbl-states
      passed: [setup-aws-terraform-infrastructure]
      trigger: true
    - get: cf-deployment-concourse-tasks
    - get: cf-deployment
    - get: ops-files
      resource: empty-ops-files
    - get: vars-files
      resource: infrastructure-ci-bbl-states
    - get: vars-store
      resource: infrastructure-ci-bbl-states
  - task: upload-stemcell
    file: cf-deployment-concourse-tasks/bosh-upload-stemcell-from-cf-deployment/task.yml
    params:
      BBL_STATE_DIR: bbl-aws-terraform
      INFRASTRUCTURE: aws
  - task: deploy
    file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
    params:
      BBL_STATE_DIR: bbl-aws-terraform
      SYSTEM_DOMAIN: bbl-aws-terraform.infrastructure.cf-app.com
      VARS_STORE_FILE: bbl-aws-terraform/deployment-vars.yml
    ensure:
      put: infrastructure-ci-bbl-states
      params:
        repository: updated-vars-store
        rebase: true
    on_failure:
      put: slack-alert
      params:
        text: |
          [$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME] failed:

          https://p-concourse.wings.cf-app.com/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME

- name: aws-terraform-cf-delete
  public: true
  plan:
  - aggregate:
    - get: bosh-bootloader
      resource: bosh-bootloader-develop
      passed: [aws-terraform-cf-deploy]
    - get: cf-deployment-concourse-tasks
    - get: bbl-state
      resource: infrastructure-ci-bbl-states
      passed: [aws-terraform-cf-deploy]
      trigger: true
  - task: delete-cf-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    params:
      BBL_STATE_DIR: bbl-aws-terraform
    on_failure:
      put: slack-alert
      params:
        text: |
          [$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME] failed:

          https://p-concourse.wings.cf-app.com/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
  - task: cleanup-cf-deployment
    file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
    params:
      BBL_STATE_DIR: bbl-aws-terraform
    on_failure:
      put: slack-alert
      params:
        text: |
          [$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME] failed:

          https://p-concourse.wings.cf-app.com/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME

- name: teardown-aws-terraform-infrastructure
  public: true
  plan:
  - aggregate:
    - get: bosh-bootloader
      resource: bosh-bootloader-develop
      passed: [aws-terraform-cf-delete]
    - get: ci
      resource: infrastructure-ci
    - get: bbl-states-repo
      resource: infrastructure-ci-bbl-states
      passed: [aws-terraform-cf-delete]
      trigger: true
  - task: bbl-destroy
    file: ci/scripts/common/bbl-destroy/task.yml
    params:
      BBL_STATE_DIR: bbl-aws-terraform
    on_failure:
      put: slack-alert
      params:
        text: |
          [$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME] failed:

          https://p-concourse.wings.cf-app.com/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
    ensure:
      put: infrastructure-ci-bbl-states
      params:
        repository: bbl-states-repo-out
        rebase: true


- name: bbl-downstream-docker-image
  public: true
  plan:
  - do:
    - aggregate:
      - get: bosh-bootloader
        resource: bosh-bootloader-develop
        passed: [aws-integration-tests, gcp-integration-tests]
        trigger: true
      - get: cf-deployment-concourse-tasks-docker-image
        trigger: true
      - get: infrastructure-ci
        resource: cf-deployment-concourse-tasks-bbl-dev-dockerfile
        trigger: true
    - put: cf-deployment-concourse-tasks-bbl-dev-docker-image
      params:
        build: infrastructure-ci/dockerfiles/cf-deployment-concourse-tasks-bbl-dev
        cache: false
      on_failure:
        put: slack-alert
        params:
          text: |
            [$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME] failed:

            https://p-concourse.wings.cf-app.com/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME

- name: bbl-downstream-setup-env
  serial_groups: [downstream]
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: bosh-bootloader
      resource: bosh-bootloader-develop
      passed: [bbl-downstream-docker-image]
      trigger: true
    - get: cf-deployment-concourse-tasks
    - get: infrastructure-ci-bbl-states
    - get: cf-deployment-concourse-tasks-bbl-dev-docker-image
      passed: [bbl-downstream-docker-image]
  - task: setup-infrastructure
    file: cf-deployment-concourse-tasks/bbl-up/task.yml
    image: cf-deployment-concourse-tasks-bbl-dev-docker-image
    params:
      BBL_IAAS: gcp
      BBL_GCP_SERVICE_ACCOUNT_KEY: google_account_creds.json
      BBL_GCP_PROJECT_ID: {{gcp_project_id}}
      BBL_GCP_REGION: us-east1
      BBL_GCP_ZONE: us-east1-b
      BBL_LB_CERT: {{bbl_downstream_cf_ssl_cert}}
      BBL_LB_KEY: {{bbl_downstream_cf_ssl_cert_private_key}}
      LB_DOMAIN: bbl-downstream.bbl-test.ci.cf-app.com
      BBL_ENV_NAME: bbl-downstream
      BBL_STATE_DIR: bbl-downstream-env
    input_mapping:
      bbl-state: infrastructure-ci-bbl-states
    ensure:
      put: infrastructure-ci-bbl-states
      params:
        repository: updated-bbl-state
        rebase: true
    on_failure:
      put: slack-alert
      params:
        text: |
          [$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME] failed:

          https://p-concourse.wings.cf-app.com/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME

- name: bbl-downstream-destroy-env
  serial_groups: [downstream]
  public: true
  build_logs_to_retain: 100
  plan:
  - aggregate:
    - get: bosh-bootloader
      resource: bosh-bootloader-develop
      passed: [bbl-downstream-setup-env]
      trigger: true
    - get: cf-deployment-concourse-tasks
    - get: infrastructure-ci-bbl-states
      passed: [bbl-downstream-setup-env]
    - get: cf-deployment-concourse-tasks-bbl-dev-docker-image
      passed: [bbl-downstream-setup-env]
  - task: destroy-infrastructure
    file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
    image: cf-deployment-concourse-tasks-bbl-dev-docker-image
    params:
      BBL_STATE_DIR: bbl-downstream-env
    input_mapping:
      bbl-state: infrastructure-ci-bbl-states
    ensure:
      put: infrastructure-ci-bbl-states
      params:
        repository: updated-bbl-state
        rebase: true
    on_failure:
      put: slack-alert
      params:
        text: |
          [$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME] failed:

          https://p-concourse.wings.cf-app.com/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME

# Final Release Pipeline
- name: major
  public: true
  plan:
  - get: version
  - put: version
    params: {bump: major}

- name: minor
  public: true
  plan:
  - get: version
  - put: version
    params: {bump: minor}

- name: patch
  public: true
  plan:
  - get: version
  - put: version
    params: {bump: patch}

- name: github-release
  public: true
  plan:
  - aggregate:
    - get: ci
      resource: infrastructure-ci
    - get: bbl-version
      trigger: true
      resource: version
    - get: bosh-bootloader
      resource: bosh-bootloader-master
  - task: build-binaries
    file: ci/scripts/bosh-bootloader/build-final-release/task.yml
  - put: bbl-release
    params:
      name: builds/name
      tag: builds/name
      commitish: builds/commitish
      body: builds/body
      globs:
      - builds/bin/bbl-*

# Cleanup
- name: cleanup-bbl-environments
  serial: true
  public: true
  plan:
  - aggregate:
    - get: ci
      resource: infrastructure-ci
    - get: bosh-bootloader
      resource: bosh-bootloader-develop
  - task: cleanup
    file: ci/scripts/bosh-bootloader/cleanup-bbl-environments/task.yml
    params:
      AWS_DEFAULT_REGION: us-east-1
      AWS_ACCESS_KEY_ID: {{bbl_integration_tests_s3_access_key_id}}
      AWS_SECRET_ACCESS_KEY: {{bbl_integration_tests_s3_secret_access_key}}
